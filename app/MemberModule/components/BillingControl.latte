{import '../templates/@svg.latte'}

<style type="text/css" n:syntax="off">
	#billing .number { width: 3em }
	#billing .currency { width: 6em }
	#billing .number, #billing .currency { text-align: right }
	#billing h4 { margin-bottom: 0 }
	#billing table { width: 100%; border-collapse: collapse; }
	#billing table.view, #billing table.view td, #billing table.view th { border: 1px solid gray; padding: 1ex;}
	#billing table.view .last { border-top: 2px solid black; font-weight: bold }
</style>

<h3>Vyúčtování</h3>

<div n:foreach="$flashes as $flash" class="flash {$flash->type}">{$flash->message}</div>

<div id="billing" n:if="!$edit">
	{if $billing}
		<table class="view">
			<tr><th colspan="3">Příjmy</th><th class="right">{$billing->income} Kč</th></tr>
			<tr n:foreach="$billing->related('akce_billing_item')->where('negative', FALSE) as $item">
				<td>{$item->name} {if $item->booked}(faktura {$item->invoice}){/if}</td>
				<td class="right">{$item->price} Kč</td>
				<td class="right">{$item->count}×</td>
				<td class="right">{$item->price * $item->count} Kč</td>
			</tr>
			<tr><th colspan="3">Výdaje</th><th class="right">{$billing->expense} Kč</th></tr>
			<tr n:foreach="$billing->related('akce_billing_item')->where('negative', TRUE) as $item">
				<td>{$item->name} {if $item->booked}(faktura {$item->invoice}){/if}</td>
				<td class="right">{$item->price} Kč</td>
				<td class="right">{$item->count}×</td>
				<td class="right">{$item->price * $item->count} Kč</td>
			</tr>
			<tr><td colspan="3"></td><td class="right last">{$billing->final} Kč</td></tr>
		</table>

		<div n:if="$billing->note">{$billing->note|texy}</div>

		<p class="right"><a class="buttonLike" n:href="this, edit => 1">{include svg pencil} editovat</a></p>
	{else}
		<p><a class="buttonLike" n:href="this, edit => 1">{include svg pencil} vytvořit</a></p>
	{/if}
</div>

<div id="billing" n:if="$edit">
{form billingForm}

	<ul class="error" n:if="$form->hasErrors()">
		<li n:foreach="$form->errors as $error">{$error}</li>
	</ul>

	<h4>Příjmy</h4>
	<table id="income">
		{foreach $form['incomes']->getContainers() as $id => $line}
			<tr n:if="$iterator->isFirst()">
				<th>{label incomes-$id-name /}</th>
				<th>{label incomes-$id-price /}</th>
				<th>{label incomes-$id-count /}</th>
				<th>{label incomes-$id-final /}</th>
				<th><label n:name="incomes-$id-booked">Účtováno</label></th>
				<th>{label incomes-$id-invoice /}</th>
			</tr>
			<tr>
				<td>{input incomes-$id-name}</td>
				<td>{input incomes-$id-price}</td>
				<td>{input incomes-$id-count}</td>
				<td>{input incomes-$id-final}</td>
				<td>{input incomes-$id-booked}</td>
				<td>{input incomes-$id-invoice}</td>
				<td>{input incomes-$id-remove}</td>
			</tr>
		{/foreach}
	</table>
	<div>{input $form['incomes']['multiplier_creator'] class => buttonLike, title => 'Přidat další řádek'}</div>

	<h4>Výdaje</h4>
	<table id="expense">
		{foreach $form['expenses']->getContainers() as $id => $line}
			<tr n:if="$iterator->isFirst()">
				<th>{label expenses-$id-name /}</th>
				<th>{label expenses-$id-price /}</th>
				<th>{label expenses-$id-count /}</th>
				<th>{label expenses-$id-final /}</th>
				<th><label n:name="expenses-$id-booked">Účtováno</label></th>
				<th>{label expenses-$id-invoice /}</th>
			</tr>
			<tr>
				<td>{input expenses-$id-name}</td>
				<td>{input expenses-$id-price}</td>
				<td>{input expenses-$id-count}</td>
				<td>{input expenses-$id-final}</td>
				<td>{input expenses-$id-booked}</td>
				<td>{input expenses-$id-invoice}</td>
				<td>{input expenses-$id-remove}</td>
			</tr>
		{/foreach}
	</table>
	<div> {input $form['expenses']['multiplier_creator'] class => buttonLike, title => 'Přidat další řádek'}</div>

	<p>{label income /} {input income} {label expense /} {input expense} {label final /} {input final}</p>

	<div>
        {input note}
	</div>

	<p class="right">
		<button n:name="save" class="buttonLike">
            {include svg check} uložit
		</button>
	</p>

{/form}


<script type="application/javascript" defer n:nonce>
	document.querySelectorAll('input.remove').forEach(function (el) {
		el.addEventListener('click', function () {
			const row       = el.parentElement.parentElement;
			const category  = row.parentElement.parentElement.id;
			const old       = parseFloat(row.querySelector('input.final').value);

			recount(category, old, 0);
			row.remove();
		});
	});

	document.querySelectorAll('input.price, input.count').forEach(function (el) {
		el.addEventListener('change', function () {
			const row       = el.parentElement.parentElement;
			const category  = row.parentElement.parentElement.id;
			const final     = parseFloat(row.querySelector('input.price').value) * parseInt(row.querySelector('input.count').value);
			var   field     = row.querySelector('input.final');
			const old       = parseFloat(field.value);
			field.value = final;

		   recount(category, old, final);
		})
	});

	function recount(name, oldPrice, newPrice) {
		var el = document.getElementById('billing-'+name);
		const value = parseFloat(el.value);
		el.value = value + newPrice - oldPrice;

		const incomes = parseFloat(document.getElementById('billing-income').value);
		const expenses = parseFloat(document.getElementById('billing-expense').value);
		document.getElementById('billing-final').value = incomes - expenses;
	}
</script>

</div>